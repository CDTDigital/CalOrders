{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "CalOrders API",
    "description": "CalOrders Swagger API specification by OnCore Consulting LLC.",
    "contact": {
      "name": "CalOrders Team",
      "url": "http://www.oncorellc.com/contact-us/"
    },
    "license": {
      "name": "CalOrders REST services provided under the MIT License."
    }
  },
  "host": "calorders.oncorellc.com:9080",
  "basePath": "/CalOrdersRest/webresources",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/com.oncore.calorders.rest.product/findActiveProductsByProductType/{productTypeCode}": {
      "get": {
        "description": "Gets an Active product by product type.",
        "operationId": "findActiveProductsByProductType",
        "parameters": [
          {
            "name": "productTypeCode",
            "in": "path",
            "description": "active products by product type",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Active Products by product type.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/com.oncore.calorders.rest.product/findActiveProductsByProductTypeAndVendor/{productTypeCode}/{vendorUid}": {
      "get": {
        "description": "Gets an Active product by product type and vendor.",
        "operationId": "findActiveProductsByProductTypeAndVendor",
        "parameters": [
          {
            "name": "productTypeCode",
            "in": "path",
            "description": "active products by product type",
            "required": true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "vendorUid",
            "in": "path",
            "description": "vendor Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Active Products by product type and vendor",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/com.oncore.calorders.rest.product/findProductsByProductType/{productTypeCode}": {
      "get": {
        "description": "Gets an product by product type.",
        "operationId": "findProductsByProductType",
        "parameters": [
          {
            "name": "productTypeCode",
            "in": "path",
            "description": "products by product type",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Products by product type and vendor",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/com.oncore.calorders.rest.product/doesProductNameExist/{productName}": {
      "get": {
        "description": "Check to see if a product exists by name.",
        "operationId": "doesProductNameExist",
        "parameters": [
          {
            "name": "productName",
            "in": "path",
            "description": "name of the product",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Prduct exists by name or not.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/com.oncore.calorders.rest.product/createProduct": {
      "post": {
        "description": "Creates a new prodcuct.",
        "operationId": "createProduct",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "parameters": [

        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/com.oncore.calorders.rest.product/updateProduct": {
      "post": {
        "description": "Update a prodcuct.",
        "operationId": "updateProduct",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "parameters": [

        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/com.oncore.calorders.rest.orderHistory/fetchOrdersByQuarter/{departmentId}": {
      "get": {
        "description": "get all order for a department by quarter .",
        "operationId": "fetchOrdersByQuarter",
        "parameters": [
          {
            "name": "departmentId",
            "in": "path",
            "description": "department id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "All orders by grouped by quarter",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderItemData"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/com.oncore.calorders.rest.orderHistory/fetchOrderStatusSummary/{departmentId}": {
      "get": {
        "description": "Get orders statuses for a department.",
        "operationId": "fetchOrderStatusSummary",
        "parameters": [
          {
            "name": "departmentId",
            "in": "path",
            "description": "department id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "All orders summary",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderStatusData"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/com.oncore.calorders.rest.orderHistory/findAllOrderHistoryByPartyUid/{partyUid}": {
      "get": {
        "description": "get all order by party uid.",
        "operationId": "findAllOrderHistoryByPartyUid",
        "parameters": [
          {
            "name": "partyUid",
            "in": "path",
            "description": "party id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "All orders by party.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderHistoryData"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/com.oncore.calorders.rest.orderHistory/findAllOrderHistory": {
      "get": {
        "description": "Get all order summaries.",
        "operationId": "findAllOrderHistory",
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "All orders",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderHistoryData"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/com.oncore.calorders.rest.orderHistory/findOrderDetailById/{orderUid}": {
      "get": {
        "description": "Get order detail by order id.",
        "operationId": "findOrderDetailById",
        "parameters": [
          {
            "name": "orderUid",
            "in": "path",
            "description": "order id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Order detail",
            "schema": {
              "$ref": "#/definitions/OrderDetailData"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/com.oncore.calorders.rest.orderHistory/createOrder": {
      "post": {
        "description": "Creates new Order.",
        "operationId": "createOrder",
        "consumes": [
          "application/json",
          "application/x"
        ],
        "parameters": [

        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/com.oncore.calorders.rest.orderHistory/cancelOrder/{orderUid}": {
      "post": {
        "description": "Cancel an order.",
        "operationId": "cancelOrder",
        "consumes": [
          "application/json",
          "application/x"
        ],
        "parameters": [
          {
            "name": "orderUid",
            "in": "path",
            "description": "order id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/com.oncore.calorders.rest.party/findPartyByUserIdAndPassword/{userId}/{password}": {
      "get": {
        "description": "Get the party by userId and password.",
        "operationId": "findPartyByUserIdAndPassword",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "active products by product type",
            "required": true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "password",
            "in": "path",
            "description": "active products by product type",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Party by username and password",
            "schema": {
              "$ref": "#/definitions/PartyData"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/com.oncore.calorders.rest.party/findAllGroupsByPartyId/{partyId}": {
      "get": {
        "description": "Gets all groups by party.",
        "operationId": "findAllGroupsByPartyId",
        "parameters": [
          {
            "name": "partyId",
            "in": "path",
            "description": "unique party Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "All groups by party",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GroupData"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/com.oncore.calorders.rest.party/findAllPrivilegesByPartyId/{partyId}": {
      "get": {
        "description": "Get all privileges by party.",
        "operationId": "findAllPrivilegesByPartyId",
        "parameters": [
          {
            "name": "partyId",
            "in": "path",
            "description": "unique party Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "All privileges by party",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PrivilegeData"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/com.oncore.calorders.rest.party/findNavBarPrivilegesByPartyId/{partyId}": {
      "get": {
        "description": "Get authorized nav bar by party.",
        "operationId": "findNavBarPrivilegesByPartyId",
        "parameters": [
          {
            "name": "partyId",
            "in": "path",
            "description": "unique party Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Navigation bar privileges by party",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PrivilegeData"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/com.oncore.calorders.rest.party/findNavMenuPrivilegesByPartyId/{partyId}": {
      "get": {
        "description": "Get authorized nav menu by party.",
        "operationId": "findNavMenuPrivilegesByPartyId",
        "parameters": [
          {
            "name": "partyId",
            "in": "path",
            "description": "unique party Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Navigation menu privileges by party",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PrivilegeData"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Product": {
      "type": "object",
      "properties": {
        "prdUid": {
          "type": "integer",
          "format": "int64"
        },
        "prdActiveInd": {
          "type": "string",
          "description": "Product active Indicator"
        },
        "prdCategoryCd": {
          "$ref": "#/definitions/Code"
        },
        "prdCntrDiscount": {
          "type": "integer",
          "format": "int32",
          "description": "product control discount percentage"
        },
        "prdCntrLnItm": {
          "type": "string",
          "description": "Product control line item."
        },
        "prdCntrUnitPrice": {
          "type": "number",
          "description": "Product control unit price."
        },
        "prdImgTypeCd": {
          "$ref": "#/definitions/Code"
        },
        "prdShortDesc": {
          "type": "string",
          "description": "Short description of the product."
        },
        "prdLongDesc": {
          "type": "string",
          "description": "Long description of the product."
        },
        "prdName": {
          "type": "string",
          "description": "Product name."
        },
        "prdOemName": {
          "type": "string",
          "description": "Product OEM name."
        },
        "prdOemPartNum": {
          "type": "string",
          "description": "Product OEM part number."
        },
        "prdPrice": {
          "type": "number",
          "description": "Product price."
        },
        "prdSku": {
          "type": "string",
          "description": "Product SKU."
        },
        "prdUnitCd": {
          "$ref": "#/definitions/Code"
        },
        "vendor": {
          "$ref": "#/definitions/Vendor"
        },
        "audit": {
          "$ref": "#/definitions/ObjAudit"
        }
      }
    },
    "Vendor": {
      "type": "object",
      "properties": {
        "vndUid": {
          "type": "integer",
          "format": "int64"
        },
        "vndActiveInd": {
          "type": "string",
          "description": "Vendor active indicator."
        },
        "vndDesc": {
          "type": "string",
          "description": "Vendor description."
        },
        "vndManager": {
          "type": "string",
          "description": "Vendor manager name."
        },
        "vndName": {
          "type": "string",
          "description": "Vendor nam."
        },
        "audit": {
          "$ref": "#/definitions/ObjAudit"
        }
      }
    },
    "OrderHistoryData": {
      "type": "object",
      "properties": {
        "orderAgency": {
          "type": "string",
          "description": "Ordering Agency"
        },
        "orderDate": {
          "type": "string",
          "format": "date-time"
        },
        "orderDescription": {
          "type": "string",
          "description": "Order Description"
        },
        "orderHistoryId": {
          "type": "integer",
          "format": "int64"
        },
        "orderPrice": {
          "type": "number",
          "description": "Order price."
        },
        "orderStatus": {
          "type": "string",
          "description": "Order Status"
        }
      }
    },
    "OrderItemData": {
      "type": "object",
      "properties": {
        "label": {
          "type": "integer",
          "format": "int32",
          "description": "Label shown on the page for the order number."
        },
        "y": {
          "type": "integer",
          "format": "int32",
          "description": "Order number for a particular year."
        },
        "year": {
          "type": "integer",
          "format": "int32",
          "description": "Year of the order numbers."
        }
      }
    },
    "OrderDetailData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Order number Id."
        },
        "statusDescription": {
          "type": "string",
          "description": "Status description of the order."
        },
        "statusCode": {
          "type": "string",
          "description": "Status code of the order."
        },
        "orderDate": {
          "type": "string",
          "format": "date-time"
        },
        "shippingName": {
          "type": "string",
          "description": "Shipping name on the order."
        },
        "shippingAddressLine1": {
          "type": "string",
          "description": "Order shipping address line 1."
        },
        "shippingAddressLine2": {
          "type": "string",
          "description": "Order shipping address line 2."
        },
        "shippingAddressCity": {
          "type": "string",
          "description": "Order shipping address city."
        },
        "shippingAddressStateCode": {
          "type": "string",
          "description": "Order shipping address state."
        },
        "shippingAddressZipCode": {
          "type": "string",
          "description": "Order shipping address zip code."
        },
        "productTotalPrice": {
          "type": "number",
          "description": "Total product price."
        },
        "shippingPrice": {
          "type": "number",
          "description": "shipping price for the order."
        },
        "totalPrice": {
          "type": "number",
          "description": "Total price of the order"
        },
        "orderDetailProductDataList": {
          "$ref": "#/definitions/OrderDetailProductData"
        }
      }
    },
    "OrderDetailProductData": {
      "type": "object",
      "properties": {
        "prdUid": {
          "type": "integer",
          "format": "int32",
          "description": "product Id."
        },
        "prdName": {
          "type": "string",
          "description": "Product name."
        },
        "prdQuantity": {
          "type": "integer",
          "format": "int32",
          "description": "Product Quantity."
        },
        "prdPrice": {
          "type": "number",
          "description": "Product price for order."
        },
        "prdEachPrice": {
          "type": "number",
          "description": "Product each price."
        },
        "prdImgImage": {
          "type": "string",
          "description": "Product iamge."
        },
        "prdImgTypeCd": {
          "$ref": "#/definitions/Code"
        }
      }
    },
    "OrderStatusData": {
      "type": "object",
      "properties": {
        "items": {
          "type": "integer",
          "format": "int32",
          "description": "Number of orders."
        },
        "name": {
          "type": "string",
          "description": "Status of the order number."
        }
      }
    },
    "PartyData": {
      "type": "object",
      "properties": {
        "ptyUid": {
          "type": "integer",
          "format": "int32",
          "description": "Party Id."
        },
        "ptyUserId": {
          "type": "string",
          "description": "Party User ID."
        },
        "ptyPassword": {
          "type": "string",
          "description": "Party password."
        },
        "ptyFirstNm": {
          "type": "string",
          "description": "Party first name."
        },
        "ptyMidNm": {
          "type": "string",
          "description": "Party middle name."
        },
        "ptyLastNm": {
          "type": "string",
          "description": "Party last name."
        },
        "ptyTitle": {
          "type": "string",
          "description": "Party title."
        },
        "ptyHireDt": {
          "type": "string",
          "format": "date-time",
          "description": "Party hire date."
        },
        "depUid": {
          "type": "integer",
          "format": "int32",
          "description": "Department Id."
        },
        "depName": {
          "type": "string",
          "description": "Department name."
        },
        "depAddressLine1": {
          "type": "string",
          "description": "Department address line 1."
        },
        "depAddressLine2": {
          "type": "string",
          "description": "Department address line 2."
        },
        "depCity": {
          "type": "string",
          "description": "Department address city."
        },
        "depState": {
          "type": "string",
          "description": "Department address state."
        },
        "depZip5": {
          "type": "string",
          "description": "Department address zip 5 number."
        },
        "depZip4": {
          "type": "string",
          "description": "Department address zip 4 number."
        },
        "calculatedCityStateZip": {
          "type": "string",
          "description": "Concatenates city, state, and zip."
        },
        "groupList": {
          "$ref": "#/definitions/GroupData"
        }
      }
    },
    "GroupData": {
      "type": "object",
      "properties": {
        "grpUid": {
          "type": "integer",
          "format": "int32",
          "description": "Group Id."
        },
        "grpTypeCd": {
          "type": "string",
          "description": "Group type code."
        },
        "grpTypeCdDescription": {
          "type": "string",
          "description": "Group type code description."
        },
        "privilegesList": {
          "$ref": "#/definitions/PrivilegeData"
        }
      }
    },
    "PrivilegeData": {
      "type": "object",
      "properties": {
        "prvUid": {
          "type": "integer",
          "format": "int32",
          "description": "Privilege Id."
        },
        "pageIdentifier": {
          "type": "string",
          "description": "Page identifier."
        },
        "pageDescription": {
          "type": "string",
          "description": "Page Description."
        },
        "componentIdentifier": {
          "type": "string",
          "description": "Component Identifier."
        },
        "pageOrder": {
          "type": "integer",
          "format": "int32",
          "description": "Page order."
        },
        "canRead": {
          "type": "boolean",
          "description": "Can read."
        },
        "canWrite": {
          "type": "boolean",
          "description": "Can write."
        }
      }
    },
    "Code": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Code value."
        },
        "shortDesc": {
          "type": "string",
          "description": "Short description of the code value."
        },
        "longDesc": {
          "type": "string",
          "description": "Long description of the code value."
        },
        "audit": {
          "$ref": "#/definitions/ObjAudit"
        }
      }
    },
    "ObjAudit": {
      "type": "object",
      "properties": {
        "createTs": {
          "type": "string",
          "format": "date-time"
        },
        "createUserId": {
          "type": "string",
          "description": "Created by user Id."
        },
        "updateTs": {
          "type": "string",
          "format": "date-time"
        },
        "updateUserId": {
          "type": "string",
          "description": "Update by user Id."
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "fields": {
          "type": "string"
        }
      }
    }
  }
}
