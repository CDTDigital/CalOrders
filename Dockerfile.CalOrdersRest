FROM payara/server-full
LABEL maintainer "kyle.poland@oncorellc.com"

USER root
RUN apt-get -qq update && \
    apt-get install -qqy less --no-install-recommends && \
    apt-get install -qqy vim --no-install-recommends
RUN echo "set -o vi" >> /root/.bashrc
RUN echo "US/Pacific-New" > /etc/timezone && dpkg-reconfigure --frontend noninteractive tzdata

# placeholder ENV variables for database connections to override at runtime
ENV databasename somedatabasename
ENV databaseuser somedatabaseuser
ENV databasepassword somedatabasepassword
ENV databasehostname somedatabasehostname
ENV databaseport somedatabaseport

# mysql jar into payara for the connection to the database 
COPY libs/mysql/mysql-connector-java-5.1.38-bin.jar /opt/payara41/glassfish/lib/

# log4j.properties into the payara domain
COPY docker/log4j.properties /opt/payara41/glassfish/domains/payaradomain/lib/classes/

# copy domain.xml into the container
COPY docker/domain.xml /opt/payara41/glassfish/domains/payaradomain/config/
RUN /bin/chown payara:payara /opt/payara41/glassfish/domains/payaradomain/config/domain.xml
# script to customize domain.xml based on env variables into the container
COPY docker/customize_domainXML.pl /opt/payara41/
RUN /bin/chown payara:payara /opt/payara41/customize_domainXML.pl && \
    /bin/chmod +x /opt/payara41/customize_domainXML.pl

# copy start script into the container
COPY docker/start_payara.sh /opt/payara41/
RUN /bin/chown payara:payara /opt/payara41/start_payara.sh && \
    /bin/chmod +x /opt/payara41/start_payara.sh

# copy AppDynamics monitoring agent into the container and install it
RUN /bin/mkdir /opt/appdynamics
COPY docker/AppServerAgent-4.2.12.1.zip /opt/appdynamics
RUN cd /opt/appdynamics && /usr/bin/unzip /opt/appdynamics/AppServerAgent-*.zip && /bin/chmod -R 777 /opt/appdynamics

# copy built WAR into the container
COPY CalOrdersRest/dist/CalOrdersRest.war /
RUN /bin/chown payara:payara /CalOrdersRest.war

USER payara

CMD ["/opt/payara41/start_payara.sh"]
